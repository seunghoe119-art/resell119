네, 알겠습니다. 지금까지 논의된 모든 내용을 종합하여 '바이브코딩'에 바로 사용할 수 있는 최종 프롬프트를 만들어 드릴게요.

이 프롬프트는 웹사이트의 전체 구조, 페이지별 상세 기능, 데이터베이스 연동 방식까지 구체적으로 지시하여 AI가 명확하게 이해하고 개발할 수 있도록 구성했습니다.

✅ 최종 요청 프롬프트 (이 전체를 복사해서 사용하세요)
## 1. 프로젝트 개요

Supabase 데이터베이스와 연동하여 중고 거래 게시글을 생성하고, 저장하며, 불러올 수 있는 '중고 판매글 생성 도우미' 웹사이트를 만들어주세요.

## 2. 전체 구조 및 디자인

구조: 여러 개의 HTML 페이지로 구성된 MPA (Multi-Page Application) 방식으로 만들어주세요. (예: index.html, sell.html, saved.html)

네비게이션:

웹사이트 상단에 항상 표시되는 메뉴 바를 만들어주세요.

메뉴 항목은 [판매글 생성기], [저장된 글], [기능3], [기능4] 와 같이 구성해주세요.

[판매글 생성기]는 sell.html로, [저장된 글]은 saved.html로 연결해주세요.

디자인:

전체적으로 깔끔한 다크(어두운) 모드 테마를 적용해주세요.

사용자가 직관적으로 사용할 수 있도록 심플한 UI로 디자인해주세요.

'저장', '복사' 등 중요한 버튼은 눈에 띄는 색상(예: 빨간색)으로 강조해주세요.

## 3. 페이지별 상세 기능

📄 sell.html (판매글 생성기 페이지)
이 페이지는 화면을 왼쪽(입력)과 오른쪽(미리보기) 2단으로 분할해주세요.

A. 왼쪽: 정보 입력 폼

제품명: 한 줄 텍스트 입력

브랜드: 한 줄 텍스트 입력

상태 정보:

'최초 구매일': 날짜 선택 입력

'사용 횟수': 숫자 입력

'제품 컨디션': "신품급", "상태 좋음", "사용감 있음" 중 선택하는 드롭다운 메뉴

'추가 상태 설명': 여러 줄을 입력할 수 있는 텍스트 영역(Textarea)

구성품:

'기본 구성품': "본체", "제품 박스", "충전기", "케이블" 등을 선택하는 체크박스 목록

'기타 구성품': 직접 텍스트를 입력하는 칸

제품 특징: 장점을 입력하는 넓은 텍스트 영역 (한 줄에 하나씩 입력)

판매 가격:

'초기 구매가': 숫자 입력

'판매 희망가': 숫자 입력

거래 방식:

'거래 종류': "직거래", "택배거래", "안전거래" 체크박스 목록

'직거래 지역': 한 줄 텍스트 입력

네고 여부: "네고 불가", "네고 가능" 라디오 버튼

B. 오른쪽: 실시간 미리보기

왼쪽 폼에 내용을 입력하거나 선택할 때마다, 그 내용이 실시간으로 아래 [게시글 템플릿]에 맞춰 반영되어야 합니다.

사용자가 입력하지 않은 항목은 미리보기에서 해당 줄이 표시되지 않도록 해주세요.

미리보기 영역 아래에 다음 세 가지 버튼을 만들어주세요.

[복사하기] 버튼: 미리보기 영역의 전체 텍스트를 클립보드에 복사합니다.

[저장하기] 버튼: 폼에 입력된 모든 데이터를 Supabase DB에 저장합니다.

[초기화] 버튼: 입력 폼의 모든 내용을 지웁니다.

[게시글 템플릿]
🚁 {제품명} 판매합니다

🔹 브랜드
{브랜드} 정품입니다.

🔹 상태
- 최초 구매일: {최초 구매일}
- 사용 횟수: 총 {사용 횟수}회 (컨디션: {제품 컨디션})
- 상세 설명: {추가 상태 설명}

🔹 구성품
- 기본: {선택된 기본 구성품 목록}
- 기타: {기타 구성품}

🔹 특징
{제품 특징 - 한 줄씩 목록으로 자동 변환}

💰 판매가
- 초기 구매가 {초기 구매가}원 → 현재 {판매 희망가}원에 판매합니다.

📍 거래 방식
- {선택된 거래 종류 목록} 모두 가능합니다.
- 직거래 선호 지역은 {직거래 지역}입니다.

✔️ {네고 여부}. 빠른 거래 원합니다.
🗂️ saved.html (저장된 글 목록 페이지)
기능: 이 페이지가 열리면, Supabase DB에 저장된 모든 글 목록을 최신순으로 불러와 리스트 형태로 보여주세요. 리스트에는 각 글의 '제품명'과 '저장된 시간'이 표시되어야 합니다.

사용자 인터랙션: 리스트에서 특정 항목을 클릭하면, 해당 글의 고유 ID를 URL 파라미터에 담아서 sell.html 페이지로 이동시켜주세요. (예: sell.html?id=123)

⚙️ sell.html의 데이터 불러오기 로직
sell.html 페이지가 열릴 때, URL에 id 파라미터가 있는지 확인해야 합니다.

만약 id가 있다면, Supabase DB에서 해당 ID의 데이터를 조회한 후, 그 데이터로 왼쪽 정보 입력 폼의 모든 칸을 자동으로 채워주는 기능을 구현해주세요.

## 4. 데이터베이스 연동 (Supabase)

'posts'라는 이름의 테이블을 사용해주세요.

테이블 컬럼(열)은 id, created_at 외에 정보 입력 폼에 있는 각 항목(제품명, 브랜드, 가격 등)에 맞춰 구성해주세요.

자바스크립트의 Supabase 클라이언트 라이브러리를 사용하여 데이터 INSERT(저장) 및 SELECT(조회) 기능을 구현해주세요.